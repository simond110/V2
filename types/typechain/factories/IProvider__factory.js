"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
exports.__esModule = true;
exports.IProvider__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256"
            },
        ],
        name: "addLiquidity",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_sendRewardsToStaking",
                type: "bool"
            },
            {
                internalType: "uint256",
                name: "stakeDuration",
                type: "uint256"
            },
        ],
        name: "claimRewards",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256"
            },
        ],
        name: "removeLiquidity",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_user",
                type: "address"
            },
        ],
        name: "returnAllClaimableRewardAmounts",
        outputs: [
            {
                internalType: "uint256",
                name: "rewardTotal",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "lastLiquidityAddedEpochReference",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "lastEpochLiquidityWithdrawn",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "epoch",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_user",
                type: "address"
            },
        ],
        name: "returnUsersEpochTotals",
        outputs: [
            {
                internalType: "uint256",
                name: "shareTotal",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "currentInvestmentTotal",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "allPrevInvestmentTotals",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_user",
                type: "address"
            },
        ],
        name: "returnUsersInvestmentTotal",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
];
var IProvider__factory = /** @class */ (function () {
    function IProvider__factory() {
    }
    IProvider__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IProvider__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IProvider__factory.abi = _abi;
    return IProvider__factory;
}());
exports.IProvider__factory = IProvider__factory;
