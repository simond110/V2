/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakingMaster, StakingMasterInterface } from "../StakingMaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_auroxAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epochStart",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "AddToStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_claimableAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_claimablePoolRewards",
        type: "uint256",
      },
    ],
    name: "ClaimRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stakeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_claimAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_penaltyAmount",
        type: "uint256",
      },
    ],
    name: "CloseStaking",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stakeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_stakeEndTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "CreateStaking",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "UpdateProviderAddress",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addToStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "_balance",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_investedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_stakeEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_lastUpdate",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "_compounded",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "_rawInvestedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_stakeStartTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "_providerStake",
            type: "bool",
          },
        ],
        internalType: "struct IStakingMaster.RecreateStakeArgs[]",
        name: "recreateStakeArgs",
        type: "tuple[]",
      },
    ],
    name: "batchRecreateStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    name: "closeStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "createStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investedTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localCreationCount",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolRewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "_balance",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_investedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_stakeEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_lastUpdate",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "_compounded",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "_rawInvestedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_stakeStartTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "_providerStake",
            type: "bool",
          },
        ],
        internalType: "struct IStakingMaster.RecreateStakeArgs",
        name: "recreateStakeArgs",
        type: "tuple",
      },
    ],
    name: "recreateStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    name: "returnClaimAmountForEarlyStakeClose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "returnCompoundInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    name: "returnCurrentStakeValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_epochOne",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_fromStakingContract",
        type: "bool",
      },
    ],
    name: "returnInterestPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "returnSimpleInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    name: "returnStakeState",
    outputs: [
      {
        internalType: "uint256",
        name: "currentStakeValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdate",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "compounding",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rawInvestedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeStartTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    name: "returnStakesClaimablePoolRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingAddress",
        type: "address",
      },
    ],
    name: "returnStakesClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_durationInSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "compounding",
        type: "bool",
      },
    ],
    name: "returnTotalInterestAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "returnUsersStakes",
    outputs: [
      {
        internalType: "address[]",
        name: "usersStakes",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "returnUsersTotalStakeValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "returnValidUsersProviderStake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_providerAddress",
        type: "address",
      },
    ],
    name: "setProviderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "staking",
    outputs: [
      {
        internalType: "uint256",
        name: "investedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdate",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "compounded",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rawInvestedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeStartTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "providerStake",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "released",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "poolRewardsClaimed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalLocked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class StakingMaster__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _auroxAddress: string,
    _epochStart: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingMaster> {
    return super.deploy(
      _auroxAddress,
      _epochStart,
      overrides || {}
    ) as Promise<StakingMaster>;
  }
  getDeployTransaction(
    _auroxAddress: string,
    _epochStart: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _auroxAddress,
      _epochStart,
      overrides || {}
    );
  }
  attach(address: string): StakingMaster {
    return super.attach(address) as StakingMaster;
  }
  connect(signer: Signer): StakingMaster__factory {
    return super.connect(signer) as StakingMaster__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingMasterInterface {
    return new utils.Interface(_abi) as StakingMasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingMaster {
    return new Contract(address, _abi, signerOrProvider) as StakingMaster;
  }
}
